INSTALL_LINUX_DEBIAN REVISED FOR LINUX_CENTOS
(Warp website에서 제공하는 Debian용 Manual을 수정) (2020.03.26 version) (Edited by Byungchan Lee)

1. Preparing your Linux environnement
sudo yum -y update
sudo yum install wget make git gcc libX11-devel (optional : vim redhat-lsb)


2. Installing Anaconda
wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh (-O miniconda.sh)
** 혹은 website에서 최신버전(2020.03. 기준 4.7.12)을 다운 받을 수 있다.
** python3 버전, python2 버전 모두 가능하다. Manual은 python2 기준

sh Miniconda2-latest-Linux-x86_64.sh (-b)
** -b는 background mode로 추측;
** -b option 없이 실행하면 약관에 동의하고 initialize 설정 가능한데, 안 하는게 좋다.

vim ~/.bashrc
add a below line
export PATH=$HOME/miniconda2/bin/:$PATH
** .bashrc 파일에 위 문장을 추가한다.
** 설치시 initialize 설정 했으면 안해도 되는데, miniconda를 사용한다면 Path 설정만 해주는게 낫다.

source ~/.bashrc
	** .bashrc 실행을 한 번 해줘야 PATH 설정된다.


3. Installing required packages
source activate
	** conda 가상환경 내에서 작업

conda config --add channels conda-forge 
conda install gcc_linux-64 gfortran_linux-64 libx11-devel-cos6-x86_64 mpi4py
pip install numpy scipy h5py Forthon pyevtk
  ** conda install -c conda-forge (packages..) 형태로도 가능
  ** -c option : install 할때 어떤 channel을 추가하여 그 안에서 package를 찾는다.
    conda-forge : a name of channel
	** pip/conda list	: pip/conda에 설치된 package 확인
	** pip uninstall		: pip에 설치된 package 삭제
  ** conda remove	: conda에 설치된 package 삭제
	** miniconda version에 따라 package 정보가 다르게 입력되는 것 같다.
  ** https://anaconda.org/ anaconda cloud에서 패키지 정보를 검색할 수 있다.


4. Installing pygist
conda deactivate
  ** conda 가상환경을 끄고 설치해야한다. 안 그러면 X11 라이브러리를 인식 못한다.
	** X11 library가 설치되어 있어야 한다. (sudo yum install; 앞에 설명했음)
git clone https://bitbucket.org/dpgrote/pygist.git
cd pygist
python setup.py config
python setup.py install
cd ..
source activate
	** 설치가 됐으면 다시 가상환경으로 진입
	** pip install로 설치 가능한 pygist는 버전이 다르다.


5. Installing Warp
git clone https://bitbucket.org/berkeleylab/warp.git
	** https://bitbucket.org/berkeleylab/warp/downloads/ 웹에서 다운로드 가능
	** 4.5 version에 압축파일과 github의 warp 폴더 안에 있는 내용물은 다르다.
	** git status 통해 달라진 파일 없는지 확인, git pull 통해 업데이트 파일 다운

then cd into the repository warp/pywarp90 and create two files:
vim Makefile.local
  FCOMP= -F gfortran
  FCOMPEXEC= --fcompexec x86_64-conda_cos6-linux-gnu-gfortran
vim Makefile.local.pympi
	FCOMP= -F gfortran

  ** Makefile.Forthon.pympi 안에 FOMPEXEC = --fcompexec mpifort 문장이 있다.
	** setup.local.py는 mpifort가 잘 작동하면 만들지 않아도 된다. 
  ** '/usr/lib/x86_64-linux-gnu' 해당 directory RedHat 계열에는 존재하지 않는다.
    redhat 계열	/usr/lib64/ → 이게 그 역할을 대신한다.

make install
make pinstall
(or, make installall)
	** make install pinstall도 똑같다.
  ** Error 유형
make install 설치 에러 : package가 설치 안 됐을 가능성이 높음
make pinstall : install이 잘 됐으면 Fortran compiler, mpi 문제일 가능성이 높음


6. Test Warp
cd into the repository warp/warp_test
(serial version) python runalltests.py
(parallel version) mpirun -np # python runalltests.py
  ** # = number of processor

or use test scripts in the repository warp/examples



0. Uninstallation
warp
→ rm -rf miniconda2/lib/python2.7/site-packages/warp*

Directory : warp/pywarp90
→ make cleanall
→ cd ../../
→ rm -rf warp/

pygist
Directory : pygist
→ python setup.py clean
→ cd ../
→ rm -rf pygist/

miniconda
Directory : miniconda2가 설치된 directory
→ conda clean --all (not sure this command is necessary)
→ rm -rf miniconda2/
(remove hidden files)
→ rm -f ~/.conda ~/.continuum ~/.bashrc-miniconda2.bak

anaconda
Directory : anaconda2가 설치된 directory
→ conda install anaconda-clean
→ rm -rf anaconda2/
(remove hidden files)
→ rm -f ~/.conda ~/.continuum ~/.condarc